blueprint:
  name: "Ajf_defi"
  description: "Automatisation avancée pour les défis Hilo avec gestion individuelle des thermostats et des groupes."
  domain: automation
  input:
    default_challenge_entity:
      name: "Entité de Défi de Hilo par défaut"
      selector:
        entity:
          domain:
          - sensor
          multiple: false
    do_pre_heat:
      name: "Activer le pré-chauffage"
      description: "Pré-chauffer avant la réduction (équivalent au pré-chauffage de l'appli Hilo)"
      default: true
      selector:
        boolean: {}
    challenge_am:
      name: "Défi AM"
      default: true
      selector:
        boolean: {}
    challenge_pm:
      name: "Défi PM"
      default: true
      selector:
        boolean: {}
    thermostats:
      name: "Thermostats"
      selector:
        entity:
          domain:
          - climate
          multiple: true
    thermostat_temps:
      name: "Températures par thermostat"
      description: "Définir une température spécifique par thermostat."
      selector:
        object: {}
      default: {}
    thermostat_groups:
      name: "Groupes de thermostats"
      description: "Définir des groupes de thermostats avec leurs températures spécifiques."
      selector:
        object: {}
      default: {}
    normal_temp:
      name: "Température normale"
      default: 21
      selector:
        number:
          min: 15.0
          max: 25.0
          unit_of_measurement: "°C"
    preheat_temp:
      name: "Température de pré-chauffage"
      default: 23
      selector:
        number:
          min: 15.0
          max: 25.0
          unit_of_measurement: "°C"
    challenge_temp:
      name: "Température de défi"
      default: 17
      selector:
        number:
          min: 15.0
          max: 25.0
          unit_of_measurement: "°C"
    water_heater:
      name: "Chauffe-eau"
      selector:
        entity:
          domain:
          - switch
          multiple: false
      default: "switch.chauffe_eau"
    bool_ref_water_heater:
      name: "Contrôle du chauffe-eau"
      default: false
      selector:
        boolean: {}
triggers:
  - platform: state
    entity_id: sensor.defi_hilo
variables:
  do_pre_heat: !input do_pre_heat
  thermostats: !input thermostats
  thermostat_temps: !input thermostat_temps
  thermostat_groups: !input thermostat_groups
  normal_temp: !input normal_temp
  preheat_temp: !input preheat_temp
  challenge_temp: !input challenge_temp
  water_heater: !input water_heater
  bool_ref_water_heater: !input bool_ref_water_heater
action:
  - choose:
      - conditions:
          - condition: state
            entity_id: sensor.defi_hilo
            state: pre_heat
        sequence:
          - repeat:
              for_each: "{{ thermostats }}"
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ repeat.item }}"
                    temperature: "{{ thermostat_temps.get(repeat.item, thermostat_groups.get(repeat.item, preheat_temp)) }}"
          - if:
              - condition: template
                value_template: "{{ bool_ref_water_heater }}"
            then:
              - service: switch.turn_on
                target:
                  entity_id: "{{ water_heater }}"
      - conditions:
          - condition: state
            entity_id: sensor.defi_hilo
            state: reduction
        sequence:
          - repeat:
              for_each: "{{ thermostats }}"
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ repeat.item }}"
                    temperature: "{{ thermostat_temps.get(repeat.item, thermostat_groups.get(repeat.item, challenge_temp)) }}"
          - service: switch.turn_off
            target:
              entity_id: "{{ water_heater }}"
      - conditions:
          - condition: state
            entity_id: sensor.defi_hilo
            state: "off"
        sequence:
          - repeat:
              for_each: "{{ thermostats }}"
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ repeat.item }}"
                    temperature: "{{ thermostat_temps.get(repeat.item, thermostat_groups.get(repeat.item, normal_temp)) }}"
          - if:
              - condition: template
                value_template: "{{ bool_ref_water_heater }}"
            then:
              - service: switch.turn_on
                target:
                  entity_id: "{{ water_heater }}"
